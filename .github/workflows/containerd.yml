name: containerd

on:
  push:
  schedule:
    - cron: "42 1 * * */6"
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}
env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  critest:
    strategy:
      matrix:
        suite:
          - name: unstable
            list: |
              deb http://deb.debian.org/debian/ unstable main
              deb http://incoming.debian.org/debian-buildd buildd-unstable main
            prefer: |
              Package: *
              Pin-Priority: 1000
              Pin: release o=Debian, a=unstable
            cri_tools_ver: master
    runs-on: ubuntu-latest
    steps:
      - name: install cri tools
        run: |
          git clone --depth=1 --branch ${{ matrix.suite.cri_tools_ver}} https://github.com/kubernetes-sigs/cri-tools
          make -C cri-tools binaries
          sudo make -C cri-tools install
      - name: configure cni conf
        run: |
          sudo mkdir -p /etc/cni/net.d/
          cat << EOF | sudo tee /etc/cni/net.d/10-containerd-net.conflist
          {
            "cniVersion": "0.3.1",
            "name": "containerd-net",
            "plugins": [
              {
                "type": "bridge",
                "bridge": "cni0",
                "isGateway": true,
                "ipMasq": true,
                "promiscMode": true,
                "ipam": {
                  "type": "host-local",
                  "ranges": [
                    [{
                      "subnet": "10.88.0.0/16"
                    }]
                  ],
                  "routes": [
                    { "dst": "0.0.0.0/0" }
                  ]
                }
              },
              {
                "type": "portmap",
                "capabilities": {"portMappings": true}
              }
            ]
          }
          EOF
      - name: uninstall moby-engine
        run: |
          sudo apt-get purge -y moby-engine
      - name: install containerd
        run: |
          wget https://deb.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2019.1_all.deb -O keyring.deb
          sudo dpkg -i keyring.deb
          cat << EOF | sudo tee /etc/apt/sources.list.d/debian.list
          ${{ matrix.suite.list }}
          EOF
          cat << EOF | sudo tee /etc/apt/preferences.d/debian
          ${{ matrix.suite.prefer }}
          EOF
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends --allow-downgrades containerd containernetworking-plugins
      - name: check versions
        run: |
          critest -version
          runc -v
          sudo ctr version
      - name: check status
        run: |
          ip addr
          ip route
          sudo systemctl status containerd
          sudo crictl --runtime-endpoint=unix:///run/containerd/containerd.sock info
      - name: run critest
        run: |
          sudo critest -ginkgo.v -runtime-endpoint=unix:///run/containerd/containerd.sock
      - name: check log
        if: failure()
        run: |
          sudo dmesg
          sudo journalctl -u containerd --no-pager
  kubernetes-e2e:
    strategy:
      matrix:
        suite:
          - name: unstable
            list: |
              deb http://deb.debian.org/debian/ unstable main
              deb http://incoming.debian.org/debian-buildd buildd-unstable main
            prefer: |
              Package: *
              Pin-Priority: 1000
              Pin: release o=Debian, a=unstable
        k8s_e2e_ver:
          - v1.19.0
    runs-on: ubuntu-latest
    steps:
      - name: disable swap
        run: |
          sudo swapoff -a -v
      - name: uninstall moby-engine
        run: |
          sudo apt-get purge -y moby-engine
      - name: install containerd
        run: |
          wget https://deb.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2019.1_all.deb -O keyring.deb
          sudo dpkg -i keyring.deb
          cat << EOF | sudo tee /etc/apt/sources.list.d/debian.list
          ${{ matrix.suite.list }}
          EOF
          cat << EOF | sudo tee /etc/apt/preferences.d/debian
          ${{ matrix.suite.prefer }}
          EOF
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends --allow-downgrades containerd
      - name: setup containerd
        run: |
          sudo mkdir -p /mnt/containerd
          cat << EOF | sudo tee /etc/containerd/config.toml
          version = 2
          root = "/mnt/containerd"
          [plugins]
            [plugins."io.containerd.grpc.v1.cri"]
              [plugins."io.containerd.grpc.v1.cri".cni]
                bin_dir = "/opt/cni/bin/"
                conf_dir = "/etc/cni/net.d"
            [plugins."io.containerd.internal.v1.opt"]
              path = "/var/lib/containerd/opt"
          EOF
          sudo systemctl restart containerd
      - name: install kubernetes
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends --allow-downgrades kubeadm
      - name: bootstrap kubernetes
        run: |
          sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket=unix:///run/containerd/containerd.sock
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          kubectl taint nodes --all node-role.kubernetes.io/master-
          kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
      - name: check status
        timeout-minutes: 15
        run: |
          kubectl get --show-labels -o wide --all-namespaces all
          kubectl wait --for condition=available --timeout=600s -n kube-system deployments --all
          kubectl wait --for condition=ready --timeout=600s -n kube-system pods --all
          kubectl get --show-labels -o wide nodes
          kubectl get --show-labels -o wide -n kube-system deployments
          kubectl get --show-labels -o wide -n kube-system daemonsets
          kubectl get --show-labels -o wide --all-namespaces pods
      - name: setup go1.15
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15"
      - name: run kubernetes e2e test
        run: |
          git clone --depth=1 --branch ${{ matrix.k8s_e2e_ver }} https://github.com/kubernetes/kubernetes
          cd kubernetes
          make generated_files
          go test -mod=vendor -c ./test/e2e/
          ./e2e.test -test.v -ginkgo.v -kubeconfig=$HOME/.kube/config \
            -ginkgo.focus="\[Conformance\]|\[NodeConformance\]" \
            -ginkgo.skip="\[Flaky\]|\[Slow\]|\[Serial\]"
      - name: check logs
        if: failure()
        run: |
          df -h
          free -h
          sudo dmesg
          sudo systemctl status containerd
          sudo journalctl -u containerd --no-pager
          sudo systemctl status kubelet
          sudo journalctl -u kubelet --no-pager
          sudo crictl --runtime-endpoint=unix:///run/containerd/containerd.sock ps -a
